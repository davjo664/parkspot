// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  repositories {
    jcenter()
    google()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.1.2'

    classpath 'com.google.gms:google-services:3.2.1'
    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    mavenLocal()
    jcenter()

    maven {
      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
      url "$rootDir/../node_modules/react-native/android"
    }
    google()
  }
}


/** reading version from package.json */
import groovy.json.JsonSlurper
def getNpmVersion() {
  def inputFile = new File("../package.json")
  def packageJson = new JsonSlurper().parseText(inputFile.text)
  return packageJson["version"]
}
def (major, minor, patch) = getNpmVersion().tokenize('.')

def getNpmVersionArray() { // major [0], minor [1], patch [2]
  def (major, minor, patch) = getNpmVersion().tokenize('.')
  return [Integer.parseInt(major), Integer.parseInt(minor), Integer.parseInt(patch)] as int[]
}

subprojects {
  ext {
    def npmVersion = getNpmVersionArray()
    versionMajor = npmVersion[0]
    versionMinor = npmVersion[1]
    versionPatch = npmVersion[2]
  }
}



// update build versions of subprojects
ext {
  compileSdkVersion = 27
  buildToolsVersion = '27.0.3'
}
subprojects { subproject ->
  afterEvaluate {
    if ((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
      android {
        compileSdkVersion rootProject.ext.compileSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion
      }
    }
  }
}
